---
description: 
globs: 
alwaysApply: true
---
- **PixiJS Engine Structure (`src/lib/pixi-engine/`)**
  - All code related to the PixiJS game engine **MUST** reside within the `src/lib/pixi-engine/` directory.
  - Do **NOT** create or place engine files in a top-level `lib/pixi-engine/` directory.
  - **Core Modules (`src/lib/pixi-engine/core/`)**:
    - Contains engine core classes like `PixiEngine`, `EventBus`, and fundamental managers (`StorageManager`, `GameStateManager`, `RuleEngine`, `ControlsManager`).
    - Example: `[EventBus.ts](mdc:src/lib/pixi-engine/core/EventBus.ts)`
  - **Configuration (`src/lib/pixi-engine/config/`)**:
    - Holds engine configuration interfaces and related types.
    - Example: `[GameConfig.ts](mdc:src/lib/pixi-engine/config/GameConfig.ts)`
  - **Game Logic (`src/lib/pixi-engine/game/`)**:
    - Includes the `BaseGame` interface/class and game-related managers (`ScoringManager`, `TimerManager`, `PowerUpManager`).
    - Example: `[ScoringManager.ts](mdc:src/lib/pixi-engine/game/ScoringManager.ts)`
  - **Asset Handling (`src/lib/pixi-engine/assets/`)**:
    - Contains asset loading and management utilities.
    - Example: `[AssetLoader.ts](mdc:src/lib/pixi-engine/assets/AssetLoader.ts)`
  - **Shared UI (`src/lib/pixi-engine/ui/`)**:
    - For reusable PixiJS UI components shared across different games within the engine.
  - **Utilities (`src/lib/pixi-engine/utils/`)**:
    - Holds engine-specific utility functions or classes.
  - **Engine Entry Point (`src/lib/pixi-engine/index.ts`)**:
    - Exports key classes, types, and functions from the engine modules.
  - **Documentation (`src/lib/pixi-engine/pixi-engine-structure.md`)**:
    - Contains documentation related to the engine's structure.

- **Game Implementations (`src/lib/pixi-games/`)**
  - Specific game logic built on top of the engine resides here, organized by game type.
  - Example: `src/lib/pixi-games/multiple-choice/MultipleChoiceGame.ts`

- **Task Master Structure (`tasks/`)**
  - All Task Master related files **MUST** reside within the root `tasks/` directory.
  - **Main Task File (`tasks/tasks.json`)**:
    - The central JSON file containing the list of all project tasks, subtasks, and their details. Managed primarily by Task Master tools.
  - **Individual Task Files (`tasks/task_*.txt` or `.md`)**:
    - Detailed markdown or text files generated for each task or subtask, providing human-readable context and details. Names typically follow the pattern `task_XXX.txt` or `subtask_X.Y.txt`.
    - Example: `tasks/task_001.txt`

- **Tests should live in a `/tests` folder located in the root directory alongside `/src`, `/public` and `/tasks`** mirroring the main app structure.


- **Reference:** The authoritative source for the overall project structure, including the Pixi engine, is detailed in the file structure section of `[pixi-structure-doc.md](mdc:src/lib/pixi-engine/pixi-structure-doc.md)`.
